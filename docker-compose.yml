services:
  gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    image: niftytools-gateway:latest
    container_name: niftytools-gateway
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      NODE_ENV: production
      TEXT_TOOLS_SERVICE_URL: http://text-tools-service:3001
    depends_on:
      text-tools-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    volumes:
      - ./logs/gateway:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - niftytools

  text-tools-service:
    build:
      context: ./services/text-tools-service
      dockerfile: Dockerfile
    image: niftytools-text-tools-service:latest
    container_name: niftytools-text-tools
    ports:
      - "0.0.0.0:3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    volumes:
      - ./logs/text-tools-service:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - niftytools

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: niftytools-frontend:latest
    container_name: niftytools-frontend
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:80/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    volumes:
      - ./logs/frontend:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - niftytools

networks:
  niftytools:
    driver: bridge
    name: niftytools
    enable_ipv6: false
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
